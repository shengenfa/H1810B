1.三大部分
第一部分： 公司里面开发流程,设计模式以及公司相关情况
第二部分： 第三方相关的SDK集成
第三部分： 干货集中营



软件公司情况：
一线城市 北上广深杭, 工资：13K
二线城市 石家庄,郑州,哈尔滨,西安,成都,太原,天津  工资：8K



软件公司：BAT, HAT, 鹅厂


软件公司：30人以下,30--100人,100人以上

研发部|技术部, 财务部,人事部,市场部  

创业型公司：刚创业(老板从银行贷款)拉融资  种子轮  天使轮，A轮  B轮



技术部：UI设计师(作图)|美工,  后台(提供接口的)|大数据(JavaEE)|PHP|Python|.NET, JSON串,XML,HTML   前端（pc端网页）,  测试, 
     移动端(Android程序员和IOS程序员)，产品经理(PM), 项目经理(老大)








开发玩Android  app  从0到1


老板|产品经理 提出一个想法,    



市场调研


立项
   

需求讨论    产品(Axture,蓝狐,墨刀)   (项目估时)   


编码


测试 



打包上线 (上传到应用商城, 
应用汇,豌豆荚,小米应用商城,华为应用商城等,手机助手,搜狗应用商城) 




一周左右

版本升级 1.0版本 ------>2.0版本 ------->3.0版本


Android热更新






项目管理系统   禅道

可以放原型图(产品),接口文档(后台),需求文档(需要咱们自己写),详细设计文档
版本迭代, BUG管理








Q： mall商城(苏园 刘佳美) 


苏园 负责  首页 分类

刘佳美  负责 专题 我的模块

Ctrl+Z


软件   ---->版本控制工具


有两种： Git,  SVN  


Git,SVN 版本控制工具(版本管理系统)       

 
github ,码云, gitlab 仓库  托管很多开源代码   存放开源代码



百分之90的公司用的GIT,剩下百分之10的公司用SVN



版本控制工具区别

GIT: 分布式的管理工具    GIT的仓库不止一个(既可以有本地仓库(自己电脑中的仓库(目录))，
也可以有远程仓库 GITHUB ,码云,GITlLAB)

SVN: 集中式的管理工具    SVN的仓库只有一个远程仓库(公司服务器里面,项目经理那儿) 





任务: 后两套技能题+安装git+安装TortoiseSvn小乌龟 




C/S架构    B/S架构




TortoiseSvn客户端 




给你分配一个SVN URL链接 和 SVN账号密码




VisualSVN服务端 





http://172.16.1.14/svn/H1810B/
用户名: ljm    密码：ljm123
  





http://172.16.1.14/svn/H1810B/
用户名: zf    密码：zf123
  





http://172.16.1.14/svn/H1810B/
用户名: wk    密码：wk123
  













           代码的检出到本地(下载到本地)
小乌龟svn  代码的增删改 提交
           代码的版本回退
          
	   
	   
	   代码的合并
           1.两个人写的代码不在同一个地方
           Q:提交代码的时候出现双方版本不一致问题
	   A:最后提交的同事需要先update下代码  





	   2.两个人写的代码是同一个地方 
           Q：会出现代码冲突
	   A：两个人协商，使用两个人中某个人的代码，然后再提交
	   



        注意:多更新，多提交(实现完某个功能或者修改完某个BUG)





   


GIT分布式的版本控制工具 本地仓库(本地电脑上的仓库)+(远程仓库 github 码云 gitlab)
Workspace：工作区  (通俗的来说就是一个空目录)
Index / Stage：暂存区     通过git add . 这个命令之后，所有相关的文件就存储在暂存区   
Repository：仓库区（或本地仓库）   通过git commit 命令之后工作区中相关的文件就存在了本地仓库区
Remote：远程仓库 (github,码云,gitlab)




1.git操作
  配置git用户名和邮箱
  配置用户名的命令：git config user.name "用户名"
  配置邮箱命令：git config user.email "邮箱"
   
  验证用户名和邮箱是否配置成功：git config user.name   git config user.email

  
  初始化git命令：  git init

  查看文件状态命令： git status

  将工作区中的文件添加到暂存区命令：git add . 
  
  将暂存区的文件添加到本地仓库：git commit -m "注释"
  
  关联远程仓库命令：git remote add origin 仓库地址

  向远程仓库提交代码命令： 第一次提交命令：git push -u origin master  
  以后提交命令： git push origin master

  版本回退命令： git reset --hard 版本号

  git分支操作： master主分支  和 子分支(dev1,dev2,dev3) 
  
  

  代码合并:把子分支要合并到主分支，如果出现冲突，协商解决，
  解决完成之后然后添加暂存区，然后再添加到本地仓库，最后上传远程仓库






  注意：主分支只有一个master， 子分支可以有多个
  


  
  

   



  
  
 













































































































































     








































